@using System.Diagnostics
@using WheresMyHomework.Core.Services.Class
@using WheresMyHomework.Core.Services.Homework.DTO.Response
@using WheresMyHomework.Data.Models

@inject IClassService ClassService

@* Testing file *@

<h1>Teacher view</h1>

@foreach (var task in _homeworkTasks)
{
    <div>
        <h3>@task.Title</h3>
        <p>@task.Description</p>
    </div>
}

@code {

    private IEnumerable<HomeworkResponseInfo> _homeworkTasks = null!;

    protected override async Task OnInitializedAsync()
    {
        var authInfo = await TeacherAuthService.GetAuthenticatedUserInfoAsync();
        Debug.Assert(authInfo != null);

        var teacherInfo = await TeacherService.GetTeacherInfoAsync(authInfo.UserId);
        var classes = await ClassService.GetClassByTeacherAsync(teacherInfo.Id);
        

        // SelectMany does not support async anon functions, so must flatten synchronously
        var unflattenedHomework = await Task.WhenAll(classes
            .Select(async cls => await HomeworkService.GetHomeworkInfoByClassIdAsync(cls.Id)));

        _homeworkTasks = unflattenedHomework.SelectMany(info => info);
    }

}
